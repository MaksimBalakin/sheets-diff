import streamlit as st
import pandas as pd
import io

st.title("–û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –∞–¥—Ä–µ—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –°–î–≠–ö —Å –æ–∫—Ä—É–≥–∞–º–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏")

st.markdown("""
–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–≤–∞ Excel-—Ñ–∞–π–ª–∞:
- **–°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª** ‚Äî —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Ä—É—á–Ω—É—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü `–û–∫—Ä—É–≥` –Ω–∞ –ª–∏—Å—Ç–µ `–°–î–≠–ö`
- **–ù–æ–≤—ã–π —Ñ–∞–π–ª** ‚Äî —Å–≤–µ–∂–∞—è –∞–¥—Ä–µ—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Ç –°–î–≠–ö
""")

old_file = st.file_uploader("–°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, 07.04)", type="xlsx")
new_file = st.file_uploader("–ù–æ–≤—ã–π —Ñ–∞–π–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, 09.04)", type="xlsx")

if old_file:
    xls = pd.ExcelFile(old_file)
    cdek_sheets = [name for name in xls.sheet_names if name.strip().lower().startswith("—Å–¥—ç–∫")]

    if not cdek_sheets:
        st.error("–í —Å—Ç–∞—Ä–æ–º —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞, –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ—Å—è —Å '–°–î–≠–ö'.")
        st.stop()
    elif len(cdek_sheets) == 1:
        selected_sheet = cdek_sheets[0]
        st.info(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –ª–∏—Å—Ç: {selected_sheet}")
    else:
        selected_sheet = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–∞–π–ª–∞:", cdek_sheets)

if old_file and new_file:
    try:
        df_old = pd.read_excel(xls, sheet_name=selected_sheet, skiprows=32)
        df_new = pd.read_excel(new_file, skiprows=32)

        required_cols = {'GID', '–ê–¥—Ä–µ—Å', '–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–µ—Å—è—Ü'}
        if not required_cols.issubset(df_old.columns) or not required_cols.issubset(df_new.columns):
            st.error("–û–±–∞ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏: GID, –ê–¥—Ä–µ—Å, –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–µ—Å—è—Ü")
        else:
            gid_to_district = df_old.set_index('GID')['–û–∫—Ä—É–≥'].to_dict()
            insert_index = df_new.columns.get_loc('GID') + 1
            df_new.insert(insert_index, '–û–∫—Ä—É–≥', df_new['GID'].map(gid_to_district))

            st.subheader("–û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –æ–∫—Ä—É–≥–∞–º–∏")
            st.dataframe(df_new)

            buffer_full = io.BytesIO()
            df_new.to_excel(buffer_full, index=False, engine='openpyxl')
            st.download_button(
                label="üì• –°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Å –æ–∫—Ä—É–≥–∞–º–∏",
                data=buffer_full.getvalue(),
                file_name="–∞–¥—Ä–µ—Å–Ω–∞—è_–ø—Ä–æ–≥—Ä–∞–º–º–∞_—Å_–æ–∫—Ä—É–≥–∞–º–∏.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )

            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            df_old_renamed = df_old[['GID', '–ê–¥—Ä–µ—Å', '–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–µ—Å—è—Ü']].copy()
            df_new_renamed = df_new[['GID', '–ê–¥—Ä–µ—Å', '–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–µ—Å—è—Ü']].copy()

            merged = df_old_renamed.merge(
                df_new_renamed,
                on='GID',
                how='outer',
                suffixes=('_—Å—Ç–∞—Ä—ã–π', '_–Ω–æ–≤—ã–π'),
                indicator=True
            )

            def detect_change(row):
                if row['_merge'] == 'left_only':
                    return '–£–¥–∞–ª–µ–Ω–æ'
                elif row['_merge'] == 'right_only':
                    return '–î–æ–±–∞–≤–ª–µ–Ω–æ'
                elif (row['–ê–¥—Ä–µ—Å_—Å—Ç–∞—Ä—ã–π'] != row['–ê–¥—Ä–µ—Å_–Ω–æ–≤—ã–π'] or
                      row['–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–µ—Å—è—Ü_—Å—Ç–∞—Ä—ã–π'] != row['–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–µ—Å—è—Ü_–Ω–æ–≤—ã–π']):
                    return '–ò–∑–º–µ–Ω–µ–Ω–æ'
                else:
                    return '–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π'

            merged['–¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è'] = merged.apply(detect_change, axis=1)
            diff_df = merged[merged['–¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è'] != '–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π']

            st.subheader("–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ —Å—Ç–∞—Ä—ã–º —Ñ–∞–π–ª–æ–º")
            st.dataframe(diff_df)

            buffer_diff = io.BytesIO()
            diff_df.to_excel(buffer_diff, index=False, engine='openpyxl')
            st.download_button(
                label="üì• –°–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∏–∑–º–µ–Ω–µ–Ω–∏–π",
                data=buffer_diff.getvalue(),
                file_name="–∏–∑–º–µ–Ω–µ–Ω–∏—è_–ø–æ_—Å—Ä–∞–≤–Ω–µ–Ω–∏—é.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
